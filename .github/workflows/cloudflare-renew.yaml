name: Cloudflare SSL Certificates

on:
  schedule: # execute every 24 hours
    - cron: "35 6 * * *"
  workflow_dispatch:

env:
    ACME_DIR: $HOME/.acme.sh
    CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
    CF_TOKEN: ${{ secrets.CF_TOKEN }}
    EMAIL: ${{ secrets.EMAIL }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl tar

    - name: Install & Configure acme.sh
      run: |
        mkdir -p $ACME_DIR
        curl  https://get.acme.sh | sh -s email=${{ secrets.EMAIL }} --home $ACME_DIR
        source $ACME_DIR/acme.sh.env
        ls -l $ACME_DIR

    - name: Verify acme.sh installation
      run: |
        $ACME_DIR/acme.sh --version

    - name: Issue & Deploy Certificates
      run: |
        export CF_Account_ID=${{ secrets.CF_ACCOUNT_ID }}
        export CF_Token=${{ secrets.CF_TOKEN }}
        export ACME=$ACME_DIR/acme.sh

        git config --global user.email ${{ secrets.EMAIL }}
        git config --global user.name acme

        check_certificate_validity() {
          cert_path=$1
          if [ -f "$cert_path" ]; then
            if openssl x509 -checkend $(( 60 * 86400 )) -noout -in "$cert_path"; then
              echo "Certificate at $cert_path is valid for more than 60 days, skipping..."
              return 0
            else
              return 1
            fi
          else
            return 1
          fi
        }

        issue_and_install_certificate() {
          domain=$1
          cert_type=$2
          acme_server=$3
          keylength=$4

          cert_path="./ssl/$domain"
          [ "$cert_type" = "RSA" ] && cert_path="$cert_path/rsa"
          cert_file="$cert_path/$domain.cer"
          key_file="$cert_path/$domain.key"

          issue_status=0
          $ACME --issue --server $acme_server --debug 2 --dns dns_cf -d "$domain" -d "*.$domain" ${keylength:+--keylength $keylength} || issue_status=$?
          if [ $issue_status -ne 0 ]; then
            echo "Failed to issue $cert_type certificate for $domain, skipping..."
            return
          fi

          install_status=0
          $ACME --installcert -d "$domain" --key-file "$key_file" --fullchain-file "$cert_file" || install_status=$?
          if [ $install_status -ne 0 ]; then
            echo "Failed to install $cert_type certificate for $domain, skipping..."
            return
          fi

          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          git add $cert_path/
          git commit -m "Update $cert_type certificate files for $domain at $TIMESTAMP"
        }

        while IFS= read -r domain || [ -n "$domain" ]; do
          mkdir -p "./ssl/$domain/rsa"

          if ! check_certificate_validity "./ssl/$domain/$domain.cer"; then
            issue_and_install_certificate "$domain" "EC" "letsencrypt" ""
          fi

          if ! check_certificate_validity "./ssl/$domain/rsa/$domain.cer"; then
            issue_and_install_certificate "$domain" "RSA" "letsencrypt" "3072"
          fi

        done < cloudflare_domains_list.txt

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
